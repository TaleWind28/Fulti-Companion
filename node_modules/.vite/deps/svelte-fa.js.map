{
  "version": 3,
  "sources": ["../../svelte-fa/dist/utils.js", "../../svelte-fa/dist/fa.svelte", "../../svelte-fa/dist/fa-layers.svelte", "../../svelte-fa/dist/fa-layers-text.svelte", "../../svelte-fa/dist/index.js"],
  "sourcesContent": ["export function setCustomFontSize(element, size) {\n    if (size && size !== \"lg\" && size !== \"sm\" && size !== \"xs\") {\n        element.style.fontSize = size.replace(\"x\", \"em\");\n    }\n    else {\n        element.style.fontSize = \"\";\n    }\n}\nexport function getTransform(scale, translateX, translateY, rotate, flip, translateTimes = 1, translateUnit = \"\", rotateUnit = \"\") {\n    let flipX = 1;\n    let flipY = 1;\n    if (flip) {\n        if (flip == \"horizontal\") {\n            flipX = -1;\n        }\n        else if (flip == \"vertical\") {\n            flipY = -1;\n        }\n        else {\n            flipX = flipY = -1;\n        }\n    }\n    if (typeof scale === \"string\") {\n        scale = parseFloat(scale);\n    }\n    if (typeof translateX === \"string\") {\n        translateX = parseFloat(translateX);\n    }\n    if (typeof translateY === \"string\") {\n        translateY = parseFloat(translateY);\n    }\n    const x = `${translateX * translateTimes}${translateUnit}`;\n    const y = `${translateY * translateTimes}${translateUnit}`;\n    let output = `translate(${x},${y}) scale(${flipX * scale},${flipY * scale})`;\n    if (rotate) {\n        output += ` rotate(${rotate}${rotateUnit})`;\n    }\n    return output;\n}\n", "<script>import { getTransform, setCustomFontSize } from \"./utils.js\";\nlet clazz = void 0;\nexport { clazz as class };\nexport let id = void 0;\nexport let style = void 0;\nexport let icon;\nexport let title = void 0;\nexport let size = void 0;\nexport let color = void 0;\nexport let fw = false;\nexport let pull = void 0;\nexport let scale = 1;\nexport let translateX = 0;\nexport let translateY = 0;\nexport let rotate = void 0;\nexport let flip = void 0;\nexport let spin = false;\nexport let pulse = false;\nexport let primaryColor = \"\";\nexport let secondaryColor = \"\";\nexport let primaryOpacity = 1;\nexport let secondaryOpacity = 0.4;\nexport let swapOpacity = false;\nlet svgElement;\n$:\n  svgElement && size && setCustomFontSize(svgElement, size);\n$:\n  i = icon && icon.icon || [0, 0, \"\", [], \"\"];\n$:\n  transform = getTransform(scale, translateX, translateY, rotate, flip, 512);\n</script>\n\n{#if i[4]}\n  <!-- eslint-disable svelte/no-inline-styles -- Only styles passed to this component should be included -->\n  <svg\n    {id}\n    class=\"svelte-fa svelte-fa-base {clazz}\"\n    class:pulse\n    class:svelte-fa-size-lg={size === \"lg\"}\n    class:svelte-fa-size-sm={size === \"sm\"}\n    class:svelte-fa-size-xs={size === \"xs\"}\n    class:svelte-fa-fw={fw}\n    class:svelte-fa-pull-left={pull === \"left\"}\n    class:svelte-fa-pull-right={pull === \"right\"}\n    class:spin\n    bind:this={svgElement}\n    {style}\n    viewBox=\"0 0 {i[0]} {i[1]}\"\n    aria-hidden=\"true\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <!-- eslint-enable -->\n    {#if title}\n      <title>{title}</title>\n    {/if}\n    <g transform=\"translate({i[0] / 2} {i[1] / 2})\" transform-origin=\"{i[0] / 4} 0\">\n      <g {transform}>\n        {#if typeof i[4] == \"string\"}\n          <path\n            d={i[4]}\n            fill={color || primaryColor || \"currentColor\"}\n            transform=\"translate({i[0] / -2} {i[1] / -2})\"\n          />\n        {:else}\n          <!-- Duotone icons -->\n          <path\n            d={i[4][0]}\n            fill={secondaryColor || color || \"currentColor\"}\n            fill-opacity={swapOpacity != false ? primaryOpacity : secondaryOpacity}\n            transform=\"translate({i[0] / -2} {i[1] / -2})\"\n          />\n          <path\n            d={i[4][1]}\n            fill={primaryColor || color || \"currentColor\"}\n            fill-opacity={swapOpacity != false ? secondaryOpacity : primaryOpacity}\n            transform=\"translate({i[0] / -2} {i[1] / -2})\"\n          />\n        {/if}\n      </g>\n    </g>\n  </svg>\n{/if}\n\n<style>\n  :global(.svelte-fa-base) {\n    height: 1em;\n    overflow: visible;\n    transform-origin: center;\n    vertical-align: -0.125em;\n  }\n\n  :global(.svelte-fa-fw) {\n    text-align: center;\n    width: 1.25em;\n  }\n\n  .svelte-fa-pull-left {\n    float: left;\n  }\n\n  .svelte-fa-pull-right {\n    float: right;\n  }\n\n  .svelte-fa-size-lg {\n    font-size: 1.33333em;\n    line-height: 0.75em;\n    vertical-align: -0.225em;\n  }\n\n  .svelte-fa-size-sm {\n    font-size: 0.875em;\n  }\n\n  .svelte-fa-size-xs {\n    font-size: 0.75em;\n  }\n\n  .spin {\n    animation: spin 2s 0s infinite linear;\n  }\n\n  .pulse {\n    animation: spin 1s infinite steps(8);\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n", "<script>import { setCustomFontSize } from \"./utils.js\";\nlet clazz = void 0;\nexport { clazz as class };\nexport let id = void 0;\nexport let style = void 0;\nexport let size = void 0;\nexport let pull = void 0;\nlet containerElement;\n$:\n  containerElement && size && setCustomFontSize(containerElement, size);\n</script>\n\n<!-- eslint-disable svelte/no-inline-styles -- Only styles passed to this component should be included -->\n<span\n  {id}\n  class=\"svelte-fa-layers svelte-fa-base svelte-fa-fw {clazz}\"\n  class:svelte-fa-pull-left={pull === \"left\"}\n  class:svelte-fa-pull-right={pull === \"right\"}\n  class:svelte-fa-size-lg={size === \"lg\"}\n  class:svelte-fa-size-sm={size === \"sm\"}\n  class:svelte-fa-size-xs={size === \"xs\"}\n  bind:this={containerElement}\n  {style}\n>\n  <!-- eslint-enable -->\n  <slot />\n</span>\n\n<style>\n  .svelte-fa-layers {\n    display: inline-block;\n    position: relative;\n  }\n\n  .svelte-fa-layers :global(.svelte-fa) {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    margin: auto;\n    text-align: center;\n  }\n\n  .svelte-fa-layers :global(.svelte-fa-layers-text) {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .svelte-fa-layers :global(.svelte-fa-layers-text span) {\n    display: inline-block;\n  }\n\n  .svelte-fa-pull-left {\n    float: left;\n  }\n\n  .svelte-fa-pull-right {\n    float: right;\n  }\n\n  .svelte-fa-size-lg {\n    font-size: 1.33333em;\n    line-height: 0.75em;\n    vertical-align: -0.225em;\n  }\n\n  .svelte-fa-size-sm {\n    font-size: 0.875em;\n  }\n\n  .svelte-fa-size-xs {\n    font-size: 0.75em;\n  }\n</style>\n", "<script>import { getTransform, setCustomFontSize } from \"./utils.js\";\nlet clazz = void 0;\nexport { clazz as class };\nexport let id = void 0;\nexport let style = void 0;\nexport let size = void 0;\nexport let color = \"\";\nexport let scale = 1;\nexport let translateX = 0;\nexport let translateY = 0;\nexport let rotate = void 0;\nexport let flip = void 0;\nlet containerElement;\n$:\n  containerElement && size && setCustomFontSize(containerElement, size);\n$:\n  containerElement && color && (containerElement.style.color = color);\n$:\n  transform = getTransform(scale, translateX, translateY, rotate, flip, 1, \"em\", \"deg\");\n$:\n  containerElement && transform && (containerElement.style.transform = transform);\n</script>\n\n<span {id} class=\"svelte-fa-layers-text {clazz}\">\n  <!-- eslint-disable svelte/no-inline-styles -- Only styles passed to this component should be included -->\n  <span\n    class=\"svelte-fa-base container\"\n    class:svelte-fa-size-lg={size === \"lg\"}\n    class:svelte-fa-size-sm={size === \"sm\"}\n    class:svelte-fa-size-xs={size === \"xs\"}\n    bind:this={containerElement}\n    {style}\n  >\n    <!-- eslint-enable -->\n    <slot />\n  </span>\n</span>\n\n<style>\n  .container {\n    display: inline-block;\n    height: auto;\n  }\n\n  .svelte-fa-size-lg {\n    font-size: 1.33333em;\n    line-height: 0.75em;\n    vertical-align: -0.225em;\n  }\n\n  .svelte-fa-size-sm {\n    font-size: 0.875em;\n  }\n\n  .svelte-fa-size-xs {\n    font-size: 0.75em;\n  }\n</style>\n", "import Fa from \"./fa.svelte\";\nimport FaLayers from \"./fa-layers.svelte\";\nimport FaLayersText from \"./fa-layers-text.svelte\";\nexport default Fa;\nexport { Fa, FaLayers, FaLayersText };\nexport * from \"./types.js\";\n"],
  "mappings": "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",
  "names": []
}
